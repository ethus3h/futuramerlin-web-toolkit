#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

# Convert a fmwtk simple-format page (*.ftm) to the more html-like fmwtk format; other files will be returned as-is
# ftm = Futuramerlin-web-Toolkit Markup
# Usage: fmwtk-convpage [page].ftm [output-file]

infile="$1"
outfile="$2"
stdout="false"
extension="${infile//*.}"

if [[ -z "$outfile" ]]; then
    outfile="-"
fi
if [[ "-" == "$outfile" ]]; then
    outfile="$(tempFile)"
    stdout="true"
fi

cp "$infile" "$outfile"

if [[ "ftm" == "$extension" ]]; then
    { while IFS= read -r currentPageLine; do
        prevLine="$currentPageLine"
        echo "$currentPageLine"
    done < "$infile"; } >> "$outfile"
    perl -0777 -p -i -e '
        s/^(\s*)\@1 ([^\n]*)\n/\1<h1>\2<\/h1>\n/gm; # headers
        s/^(\s*)\@2 ([^\n]*)\n/\1<h2>\2<\/h2>\n/gm;
        s/^(\s*)\@3 ([^\n]*)\n/\1<h3>\2<\/h3>\n/gm;
        s/^(\s*)\@4 ([^\n]*)\n/\1<h4>\2<\/h4>\n/gm;
        s/^(\s*)\@5 ([^\n]*)\n/\1<h5>\2<\/h5>\n/gm;
        s/^(\s*)\@6 ([^\n]*)\n/\1<h6>\2<\/h6>\n/gm;
        s/^(\s*[^-\n]*\n)(\s*- )/\1\n<ul>\2/gm; # ul start tags
        s/^(\s*[^#\n]*\n)(\s*# )/\1\n<ol>\2/gm; # ol start tags
        s/^(\s*- [^\n]*\n)(\s*[^-][^ ][^\n]*\n)/\1\2<\/ul>\n/gm; # ul end tags
        s/^(\s*# [^\n]*\n)(\s*[^#][^ ][^\n]*\n)/\1\2<\/ol>\n/gm; # ol end tags
        s/^(\s*)- ([^\n]*)\n/\1<li>\2<\/li>\n/gm; # li tags in ul
        s/^(\s*)# ([^\n]*)\n/\1<li>\2<\/li>\n/gm; # li tags in ol
        s/^(\s*)([^<\n\s][^\n]*)\n/\1<p>\2<\/p>\n/gm; # paragraph tags
        ' "$outfile" || die "Substitution failed"
fi

if [[ "true" == "$stdout" ]]; then
    cat "$outfile"
fi
