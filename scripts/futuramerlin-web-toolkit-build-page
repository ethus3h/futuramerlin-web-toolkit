#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

shopt -s extglob
set +H

infile="$1"
futuramerlinWebToolkitVersion="$2"
futuramerlinWebToolkitSiteName="$3"
futuramerlinWebToolkitThemeName="$4"
extension="${infile//*.}"
outfile="../../built/$1"
if [[ "ftm" == "$extension" ]]; then
    PageA="${infile/%\/index\.ftm}"
    PageB="${PageA/%\.ftm}"
    outfile="${outfile/%.ftm/.htm}"
    temp="$(tempFile)"
    fmwtk-convpage "$infile" "$temp"
    infile="$temp"
else
    PageA="${infile/%\/index\.htm}"
    PageB="${PageA/%\.htm}"
fi
echo "$infile:$outfile"
die
Page="$(basename "$PageB")"
echo "Working on page: $Page"
rm -rf "$outfile"
mkdir -p "$outfile"
rm -rf "$outfile"
if [[ -e "../../.futuramerlin-web-toolkit/start-override.htm" ]]; then
    cp "../../.futuramerlin-web-toolkit/start-override.htm" "$outfile"
else
    cp "../assets/1_start.html" "$outfile"
fi
ereplace "@FMWTK_VERSION@" "$futuramerlinWebToolkitVersion" "$outfile"
cat "../content/$infile" >> "$outfile"
cat "../assets/2_end.html" >> "$outfile"
ereplaceRegEx '(<h1>(((?!<\/h1>)[\S\s])*)<\/h1>)' '\1<!-- toc -->' "$outfile"
ereplaceRegEx '(<p class=\"breadcrumbs\">(((?!<\/p>)[\S\s])*)<\/p>)' '\1<!-- toc -->' "$outfile"
ereplaceRegEx '<!-- toc -->([\S\s]*)<!-- toc -->' '\1<!-- toc -->' "$outfile"
hypertoc --inline --make_anchors --ol --ol_num_levels 0 --make_toc --bak "" --outfile "../../built/0.tmp" --toc_label "<h2>Table of Contents</h2>" --toc_tag "!-- toc --" --toc_tag_replace --quiet --header '<nav id="toc">' --footer "</nav>" --use_id --ignore_sole_first --toc_entry H2=1 --toc_entry H3=2 --toc_entry H4=3 --toc_entry H5=4 --toc_entry H6=5 --toc_end H2=/H2 --toc_end H3=/H3 --toc_end H4=/H4 --toc_end H5=/H5 --toc_end H6=/H6 "$outfile"
# This handles <pre> tags correctly, AFAICT.
html-minifier --output "$outfile" --remove-comments --collapse-whitespace --conservative-collapse --use-short-doctype "../../built/0.tmp"
tr '\n' ' ' < "$outfile" > "../../built/1.tmp"
tr '\t' ' ' < "../../built/1.tmp" > "../../built/2.tmp"
tr '\r' ' ' < "../../built/2.tmp" > "../../built/3.tmp"
ereplace "nav-item-inactive $Page\"" 'nav-item-selected"' "$outfile"
cp "../content/$infile" "../../built/4.tmp"
# For debugging: wc -l "../../built/$infile"
# Working on the title
perl -ni -e 'print, exit if s/(<h1>(((?!<\/h1>)[\S\s])*)<\/h1>)/\1/sg' "../../built/4.tmp"
perl -0777 -p -i -e 's/^\s*//;s/\s*$//;' "../../built/4.tmp"
# "it's looking for a non-empty <h1 class="title> tag" â€”go|dfish
ereplaceRegEx '<h1>(((?!<\/h1>)[\S\s])*)<\/h1>' '\1' "../../built/4.tmp"
ereplaceRegEx '(?i)<[^>]*>' ' ' "../../built/4.tmp"
ereplaceRegEx '\s+' ' ' "../../built/4.tmp"
ereplaceRegEx '^\s+' '' "../../built/4.tmp"
ereplaceRegEx '\s+$' '' "../../built/4.tmp"
title="$(cat ../../built/4.tmp)"
echo "Title: $title"
if [[ -n "$title" ]]; then
    ereplace "<title>@FMWTK_SITE_NAME@</title>" "<title>$(htmlToText.pl <<< "$title" | normalizeWhitespace) &mdash; @FMWTK_SITE_NAME@</title>" "$outfile"
fi
ereplace "@FMWTK_SITE_NAME@" "$futuramerlinWebToolkitSiteName" "$outfile"
ereplace "@FMWTK_SITE_NAME_LOWER@" "${futuramerlinWebToolkitSiteName,}" "$outfile"
ereplace "@FMWTK_THEME_NAME@" "$futuramerlinWebToolkitThemeName" "$outfile"
# Work on home page
if [[ "$Page" == "." ]]; then
    ereplaceRegEx '<p class="logo">(((?!<\/p>)[\S\s])*)<\/p>' '<h1 class="logo">\1<\/h1>' "$outfile"
    ereplace 'nav-item-inactive index"' 'nav-item-selected"' "$outfile"
    ereplace '<nav>' '<nav class="expanded">' "$outfile"
    ereplace '<label' '<label class="expanded"' "$outfile"
    ereplace '<body>' '<body class="expanded">' "$outfile"
fi
ereplaceRegEx 'nav-item-inactive [^\"]+' 'nav-item-inactive' "$outfile"
# Replacements for compatibility with book pages
perl -0777 -p -i -e 's/<idx>//g; # Index entry
                    s/<\/idx>//g;
                    s/<idx-hidden>([^<]+)<\/idx-hidden>//g; # Hidden index entry
                    s/<web>//g; # Content to exclude from book
                    s/<\/web>//g;
                    s/<book>(((?!<\/book>)[\S\s])*)<\/book>//g; # Content to exclude from Web site
                    ' "$outfile"
shopt -u extglob
ereplaceRegEx 'href="(..\/)?..\/(.\/)*\/' 'href="\/' "$outfile"
shopt -s extglob
rm -f ../../built/*.tmp
