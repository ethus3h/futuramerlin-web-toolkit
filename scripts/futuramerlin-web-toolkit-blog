#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO}."' ERR

set -x

sourceDir="$(readlink -f "$1")"

destDir="$(readlink -f "$2")"

maxPostsPerPage="5"

[[ -e "$destDir" ]] && rm -r "$destDir"

rsync -a --checksum "$sourceDir/" "$destDir"

cd "$destDir" || die

# Count the number of posts

numPosts="$(find "$destDir" -type f -name "*.htm" -printf '.' | wc -c)"

makeIndexPage() {
    if [[ "$numPosts" -gt "$maxPostsPerPage" ]]; then
        # Create redirect page
        mkdir "$currentPageNumber"
        if [[ "$currentPageNumber" == "1" ]]; then
            echo '<!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="refresh" content="0; url=../"> </head> <body> </body> </html>' > "$currentPageNumber/index.html"
        else
            echo '<!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="refresh" content="0; url=../page-'"$currentPageNumber"'.htm"> </head> <body> </body> </html>' > "$currentPageNumber/index.html"
        fi
    fi
    
    # Create actual index page
    local indexPageName="page-$currentPageNumber.htm"
    if [[ "$currentPageNumber" == "1" ]]; then
        indexPageName="index.htm"
    fi
    printf '%s\n\n' '<h1 class="title">Ember Blog</h1>' > "$indexPageName"

    # Loop over the posts that will go on this page and process them
    local loopPostNumber="1"
    while [[ "$loopPostNumber" -lt "$maxPostsPerPage" ]]; do
        # Find the first unprocessed file
        currentPostPath="$(find "$destDir" -type f -name "*.htm" -print0 | sort -z | sed -n "$currentPostNumber"p)"
        echo "$currentPostPath"
        printf '\n%s\n' '<footer class="nav-links">' >> "$currentPostPath"

        if [[ "$currentPostNumber" != "1" ]]; then
            echo '    <div class="nav-previous">' >> "$currentPostPath"
            echo '        <a href="../../../2016/03/06/web-site-update-is-live.htm" rel="prev"><span class="meta-nav">&larr; Previous post: </span>Web site update is live!</a>' >> "$currentPostPath"
            echo '    </div>' >> "$currentPostPath"
        fi

        if [[ "$currentPostNumber" != "$numPosts" ]]; then
            echo '    <div class="nav-next">' >> "$currentPostPath"
            echo '        <a href="../../../2016/02/17/2-another-update-on-the-web-site-update-dont-get-too-excited-i-guess.htm" rel="next"><span class="meta-nav">Next post: </span>Another update on the Web site update. Don&#8217;t get too excited, I guess.<span class="meta-nav"> &rarr;</span></a>' >> "$currentPostPath"
            echo '    </div>' >> "$currentPostPath"
        fi

        echo '</footer>' >> "$currentPostPath"
        currentPostNumber=$(( currentPostNumber + 1 ))
        loopPostNumber=$(( loopPostNumber + 1 ))
    done

    # Pagination widget
    if [[ "$numPosts" -gt "$maxPostsPerPage" ]]; then
        # Make pagination widget, because there are more than one page
        echo '<footer class="pagination">' >> "$indexPageName"
        echo '    <ul>' >> "$indexPageName"
        if [[ "$currentPageNumber" != "1" ]]; then
            echo '        <li><a class="prev page-numbers" href="'$(( currentPageNumber - 1 ))'/">&laquo; Previous</a></li>' >> "$indexPageName"
        fi
        echo '        <li><span class="page-numbers current">'"$currentPageNumber"'</span></li>' >> "$indexPageName"
        if [[ "$numPostsRemaining" -gt "$maxPostsPerPage" ]]; then
            echo '        <li><a class="next page-numbers" href="'$(( currentPageNumber + 1 ))'/">Next &raquo;</a></li>' >> "$indexPageName"
        fi
        echo '        <li>' >> "$indexPageName"
        echo '            <form class="wpsp-page-nav-form" action="./" method="get">' >> "$indexPageName"
        echo '                <input class="wpsp-input-number" type="text" placeholder="Jump to" size="6" name="paged" />' >> "$indexPageName"
        echo '                <input class="wpsp-button" value="Go" type="submit" >' >> "$indexPageName"
        echo '            </form>' >> "$indexPageName"
        echo '        </li>' >> "$indexPageName"
        echo '    </ul>' >> "$indexPageName"
        echo '</footer>' >> "$indexPageName"
    fi
}

numPostsRemaining="$numPosts"
currentPageNumber="1"
currentPostNumber="1"
while [[ "$numPostsRemaining" -gt "$maxPostsPerPage" ]]; do
    makeIndexPage
    numPostsRemaining=$(( numPostsRemaining - 5 ))
    currentPageNumber=$(( currentPageNumber + 1 ))
done
# Last (or only) page
makeIndexPage

echo "built" > ".futuramerlin-web-toolkit-blog.conf"
