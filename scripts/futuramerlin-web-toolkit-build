#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null
#set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd) at $(emdate)."' ERR

#Version:
futuramerlinWebToolkitVersion='2.3.32'

# The update script shown here requires there to be only one ebuild of ember-bash-setup in the wreathe-overlay overlay.
# ( sudo true; newVersion="2.3.32"; cd "/Ember Library/Ember satellite projects/futuramerlin-web-toolkit"; eogup-single; git tag -a "v$newVersion" -m "version"; egup-single .; cd "/Ember Library/Ember satellite projects/wreathe-overlay"; eogup-single; mv app-misc/futuramerlin-web-toolkit/futuramerlin-web-toolkit-*.ebuild "app-misc/futuramerlin-web-toolkit/futuramerlin-web-toolkit-$newVersion.ebuild"; repoman manifest; egup-single; sudo layman -s wreathe-overlay; sudo emerge futuramerlin-web-toolkit )

shopt -s extglob

futuramerlinWebToolkitConfigFileName="/usr/local/etc/futuramerlin-web-toolkit.conf"

if [[ -f "$HOME/.futuramerlin-web-toolkit.cfg" ]]; then
    futuramerlinWebToolkitConfigFileName="$HOME/.futuramerlin-web-toolkit.cfg"
fi

if [[ -f ./.futuramerlin-web-toolkit/.futuramerlin-web-toolkit.cfg ]]; then
    futuramerlinWebToolkitConfigFileName="./.futuramerlin-web-toolkit/.futuramerlin-web-toolkit.cfg"
fi

echo "Preparing environment (using config file: $futuramerlinWebToolkitConfigFileName)..."
futuramerlinWebToolkitSiteName="$(preadconf siteName "$futuramerlinWebToolkitConfigFileName")"
futuramerlinWebToolkitLocalInstallationEnabled="$(preadconf localInstallation "$futuramerlinWebToolkitConfigFileName")"
rm -rf ./futuramerlin-web-toolkit-output ./futuramerlin-web-toolkit-content ./built ./source ./scripts
mkdir -p "futuramerlin-web-toolkit-content/content"
mkdir "futuramerlin-web-toolkit-content/scripts"
find . -maxdepth 1 -name "*" ! -path . ! -path ./futuramerlin-web-toolkit-content -exec cp -r {} ./futuramerlin-web-toolkit-content/content/ \;
mkdir ./source
mv ./futuramerlin-web-toolkit-content/* ./source
rm -r ./futuramerlin-web-toolkit-content
if ! git clone https://github.com/ethus3h/futuramerlin-web-toolkit.git; then
    echo "(Could not get updated toolkit version, preparing local copy instead...)"
    mkdir -pv futuramerlin-web-toolkit/support || exit 1
    cp -rv /usr/local/share/futuramerlin-web-toolkit/assets futuramerlin-web-toolkit/support/ || exit 1
    mkdir -v futuramerlin-web-toolkit/scripts || exit 1
    cp -v /usr/local/bin/futuramerlin-web-toolkit-build-page futuramerlin-web-toolkit/scripts || exit 1
    echo "(Done preparing local toolkit copy; now continuing)"
fi
mkdir built
shopt -s dotglob
mv ./futuramerlin-web-toolkit/support/assets/* ./built/
shopt -u dotglob
cp -r ./built ./source/assets
mv ./futuramerlin-web-toolkit/scripts/futuramerlin-web-toolkit-build-page ./source/scripts/build-page
rm -rf ./futuramerlin-web-toolkit

echo "Environment ready; building site..."
(
    cd ./source || exit 1
    (
        cd "content" || exit 1
        if [[ -f .futuramerlin-web-toolkit/pre-build-hooks ]]; then
            echo "Beginning pre-build-hooks..."
            ./.futuramerlin-web-toolkit/pre-build-hooks || warn "Pre-build-hooks failed; continuing anyway."
            echo "Done pre-build-hooks."
        fi
        tempFile="$(tempFile)"
        find . -name "futuramerlin-web-toolkit-discography.conf" -print0 > "$tempFile"
        while IFS= read -r -d '' currentFileName; do
            futuramerlin-web-toolkit-discography "$currentFileName"
        done < "$tempFile"
        find . -name "futuramerlin-web-toolkit-blog.conf" -print0 > "$tempFile"
        while IFS= read -r -d '' currentFileName; do
            futuramerlin-web-toolkit-blog "$currentFileName"
        done < "$tempFile"
        rm "$tempFile"
        traversedirectory() {
            echo "Entered directory $1..."
            #Iterate over the contents of the directory at $1
            shopt -s dotglob
            for i in "$1"/*; do
                mkdir -p "../../built/$1"
                if [[ -d "$i" ]]; then
                    if [[ "$i" != @(.|..|./.git|./.futuramerlin-web-toolkit) ]]; then
                        echo "Entering directory $i..."
                        traversedirectory "$i"
                    fi
                else
                    if [[ "$i" =~ \.htm$ ]]; then
                        echo "Building page: $i"
                        ../scripts/build-page "$i" "$futuramerlinWebToolkitVersion" "$futuramerlinWebToolkitSiteName"
                    else
                        echo "Copying content asset: $i"
                        cp "$i" "../../built/$i" || warn "(copying failed: probably just ignoring empty directory $i)"
                    fi
                fi
            done
            shopt -u dotglob
        }
        traversedirectory "."
        if [[ -f .futuramerlin-web-toolkit/post-build-hooks ]]; then
            echo "Beginning post-build-hooks..."
            ./.futuramerlin-web-toolkit/post-build-hooks || warn "Post-build-hooks failed; continuing anyway."
            echo "Done post-build-hooks."
        fi
    )

    echo "Processing CSS..."
    #postcss --use postcss-cssnext --postcss-cssnext.browsers "> 1%, iOS > 0, ie >= 5, last 3 versions, Firefox ESR, Firefox >= 1" -o "../built/m.css" "../built/m.css"
    tr '\n' ' ' < "../built/m.css" > "../built/1.tmp"
    tr '\t' ' ' < "../built/1.tmp" > "../built/2.tmp"
    tr '\r' ' ' < "../built/2.tmp" > "../built/3.tmp"
    tr -s " " < "../built/3.tmp" > "../built/m.css"
    minify --no-comments -o "../built/m.css" "../built/m.css" > /dev/null
    rm ../built/*.tmp
)

echo "Finishing up..."
rm ./built/1_start.html ./built/2_end.html
rm -r ./built/discography.assets
if [[ "$futuramerlinWebToolkitLocalInstallationEnabled" == "true" ]]; then
    sudo cp "./built/m.css" "/m.css"
fi
mv ./built ./futuramerlin-web-toolkit-output
mv ./source ./futuramerlin-web-toolkit-content
rm -rf ./futuramerlin-web-toolkit-content

#Clear the screen
printf "\033c"

echo "Done! The finished Web site is in:"
echo "./futuramerlin-web-toolkit-output"
